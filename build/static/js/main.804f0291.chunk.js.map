{"version":3,"sources":["components/Navbar.js","components/Loading.js","components/SearchCountry.js","components/FilterByRegion.js","components/Countries/Countries.js","components/Countries/CountriesList.js","components/Countries/BorderCountries.js","components/Countries/CountryDetailsInfo.js","components/Countries/CountryDetails.js","App.js","serviceWorker.js","styles/theme.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginBottom","title","Navbar","classes","className","AppBar","position","color","Toolbar","Typography","variant","Button","Loading","Grid","item","xs","md","Skeleton","width","height","container","spacing","sm","inputContainer","display","alignItems","padding","borderRadius","boxShadow","input","border","outline","SearchCountry","result","onChange","isRegion","type","placeholder","value","disabled","select","borderBottom","media","fetchedRegion","span","history","useHistory","map","index","name","flag","population","region","capital","key","Card","onClick","localStorage","setItem","push","handleClick","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","fontWeight","palette","primary","contrastText","Countries","data","toLocaleString","searchNav","justifyContent","formControl","flexDirection","backgroundColor","filterByRegion","breakpoints","down","CountriesList","url","useState","setFetchedRegion","setIsRegion","fetchRegion","a","changeableUrl","axios","get","res","useEffect","fetchAPI","handleRegionChange","fetchedData","FormControl","NativeSelect","e","target","FilterByRegion","borderCountries","maxWidth","borderSpan","marginRight","borderButtons","BorderCountries","borders","console","log","i","countryDetailsContainer","countryDetailsInner","countryDetailsRight","innerRight","para","CountryDetailsInfo","cioc","nativeName","subregion","topLevelDomain","currencies","languages","src","alt","Object","values","domain","join","currency","language","backButton","CountryDetails","props","country","location","state","setData","Error","fetchData","countryDetails","href","startIcon","App","filtered","setFiltered","setResult","results","filter","toLowerCase","includes","trim","getResult","Container","length","exact","path","render","Boolean","window","hostname","match","createMuiTheme","main","grey","50","500","typography","fontFamily","fontSize","fontWeightLight","fontWeightMedium","fontWeightBold","ReactDOM","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.804f0291.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: 45,\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Navbar = (theme) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Where in the world?\n          </Typography>\n          <Button color=\"inherit\">Dark Mode</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst Loading = () => {\n  return (\n    <>\n      <Grid item xs={12} md={4}>\n        <Skeleton width=\"100%\" height={60} />\n      </Grid>\n      <br />\n\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={4} md={3}>\n          <Skeleton variant=\"rect\" width=\"100%\" height={146} />\n          <br />\n          <Skeleton height={30} />\n          <Skeleton width=\"60%\" />\n          <Skeleton width=\"60%\" />\n          <Skeleton width=\"60%\" />\n        </Grid>\n        <Grid item xs={12} sm={4} md={3}>\n          <Skeleton variant=\"rect\" width=\"100%\" height={146} />\n          <br />\n          <Skeleton height={30} />\n          <Skeleton width=\"60%\" />\n          <Skeleton width=\"60%\" />\n          <Skeleton width=\"60%\" />\n        </Grid>\n        <Grid item xs={12} sm={4} md={3}>\n          <Skeleton variant=\"rect\" width=\"100%\" height={146} />\n          <br />\n          <Skeleton height={30} />\n          <Skeleton width=\"60%\" />\n          <Skeleton width=\"60%\" />\n          <Skeleton width=\"60%\" />\n        </Grid>\n        <Grid item xs={12} sm={4} md={3}>\n          <Skeleton variant=\"rect\" width=\"100%\" height={146} />\n          <br />\n          <Skeleton height={30} />\n          <Skeleton width=\"60%\" />\n          <Skeleton width=\"60%\" />\n          <Skeleton width=\"60%\" />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Loading;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles((theme) => ({\n  inputContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    marginBottom: 40,\n    padding: 10,\n    borderRadius: 4,\n    boxShadow:\n      '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n  },\n  input: {\n    border: 'none',\n    width: '100%',\n\n    '&:focus': {\n      outline: 'none',\n    },\n  },\n}));\n\nconst SearchCountry = ({ result, onChange, isRegion }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12} md={4} className={classes.inputContainer}>\n      <SearchIcon />\n      <input\n        type=\"text\"\n        placeholder={isRegion ? 'Disabled' : 'Search for a country...'}\n        value={result}\n        onChange={onChange}\n        className={classes.input}\n        disabled={isRegion ? true : false}\n      />\n    </Grid>\n  );\n};\n\nexport default SearchCountry;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Typography,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    padding: 10,\n    borderRadius: 4,\n    boxShadow:\n      '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n  },\n  '& .MuiInput-underline:before': {\n    borderBottom: '1px solid red',\n  },\n  media: {\n    height: 140,\n  },\n}));\n\nconst SearchCountry = ({ fetchedRegion }) => {\n  const { media, span } = useStyles();\n  let history = useHistory();\n  const handleClick = (name) => {\n    localStorage.setItem('selectedCountry', name);\n    history.push('/country-details', name);\n  };\n\n  return (\n    <Grid container spacing={2}>\n      {fetchedRegion.map(\n        ({ name, flag, population, region, capital }, index) => (\n          <Grid key={index} item xs={12} sm={4} md={3}>\n            <Card onClick={() => handleClick(name)}>\n              <CardActionArea>\n                <CardMedia className={media} image={flag} title={name} />\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {name}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\">\n                    <span className={span}>Population: </span>\n                    {population}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\">\n                    <span className={span}>Region: </span>\n                    {region}\n                  </Typography>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\">\n                    <span className={span}>Capital: </span>\n                    {capital}\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        )\n      )}\n    </Grid>\n  );\n};\n\nexport default SearchCountry;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Typography,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: 140,\n  },\n  span: {\n    fontWeight: 600,\n    color: theme.palette.primary.contrastText,\n  },\n}));\n\nconst Countries = ({ data }) => {\n  const { media, span } = useStyles();\n\n  let history = useHistory();\n  const handleClick = (name) => {\n    localStorage.setItem('selectedCountry', name);\n    history.push('/country-details', name);\n  };\n\n  return (\n    <Grid container spacing={2}>\n      {data.map(({ flag, name, population, region, capital }, index) => (\n        <Grid key={index} item xs={12} sm={4} md={3}>\n          <Card onClick={() => handleClick(name)}>\n            <CardActionArea>\n              <CardMedia className={media} image={flag} title={name} />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  <span className={span}>Population: </span>\n                  {population.toLocaleString()}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  <span className={span}>Region: </span>\n                  {region}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  <span className={span}>Capital: </span>\n                  {capital}\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default Countries;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, FormControl, NativeSelect } from '@material-ui/core';\nimport SearchCountry from '../SearchCountry';\nimport FilterByRegion from '../FilterByRegion';\nimport Countries from './Countries';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  searchNav: {\n    justifyContent: 'space-between',\n  },\n  formControl: {\n    flexDirection: 'inherit',\n    padding: 10,\n    boxShadow:\n      '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n    borderRadius: 4,\n    '& .MuiInput-underline:before': {\n      borderBottom: 'none',\n    },\n    '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\n      borderBottom: 'none',\n    },\n    '& .MuiNativeSelect-select': {\n      backgroundColor: 'transparent',\n    },\n  },\n  filterByRegion: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginBottom: 40,\n\n    [theme.breakpoints.down('sm')]: {\n      justifyContent: 'left',\n    },\n  },\n}));\n\nconst CountriesList = ({ data, result, onChange, url }) => {\n  const classes = useStyles();\n\n  const [fetchedRegion, setFetchedRegion] = useState([]);\n  const [isRegion, setIsRegion] = useState(false);\n\n  const fetchRegion = async (fetchedRegion) => {\n    let changeableUrl = url;\n\n    if (fetchedRegion) {\n      changeableUrl = `${url}/region/${fetchedRegion}`;\n    }\n\n    try {\n      const { data } = await axios.get(changeableUrl);\n      const region = data.map((res) => res);\n\n      return region;\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedRegion(await fetchRegion());\n    };\n\n    fetchAPI();\n  }, []);\n\n  const handleRegionChange = async (region) => {\n    const fetchedData = await fetchRegion(region);\n    setFetchedRegion(fetchedData);\n    setIsRegion(true);\n    region === '' && setIsRegion(false);\n  };\n\n  return (\n    <>\n      <Grid container className={classes.searchNav}>\n        <SearchCountry\n          onChange={onChange}\n          result={result}\n          isRegion={isRegion}\n        />\n\n        <Grid item xs={12} md={4} className={classes.filterByRegion}>\n          <FormControl className={classes.formControl}>\n            <NativeSelect\n              className={classes.select}\n              onChange={(e) => handleRegionChange(e.target.value)}>\n              <option value=\"\">Filter by Region</option>\n              <option value=\"\">All</option>\n              <option value=\"Africa\">Africa</option>\n              <option value=\"Americas\">Americas</option>\n              <option value=\"Asia\">Asia</option>\n              <option value=\"Europe\">Europe</option>\n              <option value=\"Oceania\">Oceania</option>\n            </NativeSelect>\n          </FormControl>\n        </Grid>\n      </Grid>\n      {isRegion ? (\n        <FilterByRegion fetchedRegion={fetchedRegion} />\n      ) : (\n        <Countries data={data} />\n      )}\n    </>\n  );\n};\n\nexport default CountriesList;\n","import React from 'react';\nimport { Button, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  borderCountries: {\n    fontWeight: 600,\n    maxWidth: 630,\n    color: theme.palette.primary.contrastText,\n  },\n  borderSpan: {\n    marginRight: 10,\n  },\n  borderButtons: {\n    padding: '5px 30px',\n    marginRight: 10,\n    marginBottom: 10,\n    boxShadow:\n      '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n  },\n}));\n\nconst BorderCountries = ({ borders }) => {\n  const { borderSpan, borderButtons, borderCountries } = useStyles();\n  console.log(borders);\n\n  return (\n    <>\n      <Typography\n        variant=\"body2\"\n        color=\"textSecondary\"\n        component=\"div\"\n        className={borderCountries}>\n        <span className={borderSpan}>Border Countries:</span>\n        {borders.map((border, i) => (\n          <Button key={i} className={borderButtons}>\n            {border}\n          </Button>\n        ))}\n      </Typography>\n    </>\n  );\n};\n\nexport default BorderCountries;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BorderCountries from './BorderCountries';\n\nconst useStyles = makeStyles((theme) => ({\n  countryDetailsContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  countryDetailsInner: {\n    display: 'flex',\n  },\n  media: {\n    height: 300,\n    maxWidth: 480,\n  },\n  countryDetailsRight: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-evenly',\n  },\n  innerRight: {\n    marginRight: 140,\n  },\n  para: {\n    marginBottom: 8,\n  },\n  span: {\n    fontWeight: 600,\n    color: theme.palette.primary.contrastText,\n  },\n}));\n\nconst CountryDetailsInfo = ({\n  cioc,\n  name,\n  flag,\n  nativeName,\n  population,\n  region,\n  subregion,\n  capital,\n  topLevelDomain,\n  currencies,\n  languages,\n  borders,\n}) => {\n  const {\n    countryDetailsContainer,\n    media,\n    countryDetailsRight,\n    countryDetailsInner,\n    innerRight,\n    para,\n    span,\n  } = useStyles();\n\n  return (\n    <div key={cioc} className={countryDetailsContainer}>\n      <div>\n        <img src={flag} alt={`${name} flag`} className={media} />\n      </div>\n      <div className={countryDetailsRight}>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {name}\n        </Typography>\n        <div className={countryDetailsInner}>\n          <div className={innerRight}>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={para}>\n              <span className={span}>Native Name: </span>\n              {nativeName}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={para}>\n              <span className={span}>Population: </span>\n              {population.toLocaleString()}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={para}>\n              <span className={span}>Region: </span>\n              {region}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={para}>\n              <span className={span}>Sub Region: </span>\n              {subregion}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={para}>\n              <span className={span}>Capital: </span>\n              {capital}\n            </Typography>\n          </div>\n          <div className={innerRight}>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={para}>\n              <span className={span}>Top Level Domain: </span>\n              {Object.values(topLevelDomain)\n                .map((domain) => domain)\n                .join(', ')}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={para}>\n              <span className={span}>Currencies: </span>\n              {Object.values(currencies)\n                .map((currency) => currency.name)\n                .join(', ')}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={para}>\n              <span className={span}>Languages: </span>\n              {Object.values(languages)\n                .map((language) => language.name)\n                .join(', ')}\n            </Typography>\n          </div>\n        </div>\n\n        <BorderCountries borders={borders} />\n      </div>\n    </div>\n  );\n};\n\nexport default CountryDetailsInfo;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport CountryDetailsInfo from './CountryDetailsInfo';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  backButton: {\n    padding: '5px 30px',\n    marginBottom: 50,\n    boxShadow:\n      '0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12)',\n  },\n}));\n\nconst CountryDetails = (props) => {\n  const { backButton } = useStyles();\n\n  let country = props.history.location.state;\n  const url = `https://restcountries.eu/rest/v2/name/${country}`;\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(url);\n        setData(res.data);\n      } catch (err) {\n        throw Error(err);\n      }\n    };\n    fetchData();\n  }, [url]);\n\n  const countryDetails = data.map(\n    ({\n      name,\n      cioc,\n      flag,\n      population,\n      nativeName,\n      region,\n      subregion,\n      capital,\n      topLevelDomain,\n      currencies,\n      languages,\n      borders,\n    }) => (\n      <CountryDetailsInfo\n        key={cioc}\n        name={name}\n        nativeName={nativeName}\n        flag={flag}\n        population={population}\n        region={region}\n        subregion={subregion}\n        capital={capital}\n        topLevelDomain={topLevelDomain}\n        currencies={currencies}\n        languages={languages}\n        borders={borders}\n      />\n    )\n  );\n\n  console.log(data);\n\n  return (\n    <>\n      <Button\n        href=\"/\"\n        startIcon={<KeyboardBackspaceIcon />}\n        className={backButton}>\n        Back\n      </Button>\n\n      {countryDetails}\n    </>\n  );\n};\n\nexport default CountryDetails;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Switch, Route } from 'react-router-dom';\nimport Navbar from '../src/components/Navbar';\nimport Loading from './components/Loading';\nimport CountriesList from '../src/components/Countries/CountriesList';\nimport CountryDetails from '../src/components/Countries/CountryDetails';\nimport { Container } from '@material-ui/core';\nimport '../src/styles/styles.css';\n\nfunction App() {\n  const url = 'https://restcountries.eu/rest/v2';\n  const [data, setData] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const [result, setResult] = useState('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await axios.get(url);\n        setData(res.data);\n        setFiltered(res.data);\n      } catch (err) {\n        throw Error(err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const getResult = () => {\n      const results = filtered.filter((res) =>\n        res.name.toLowerCase().includes(result.trim())\n      );\n      setData(results);\n    };\n    getResult();\n  }, [result, filtered]);\n\n  const onChange = (e) => {\n    setResult(e.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Container maxWidth=\"lg\">\n        {!data.length ? (\n          <Loading />\n        ) : (\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <CountriesList data={data} onChange={onChange} url={url} />\n              )}\n            />\n            <Route exact path=\"/country-details\" component={CountryDetails} />\n          </Switch>\n        )}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: 'hsl(0, 0%, 100%)', // Dark Mode Text & Light Mode Elements\n      contrastText: 'hsl(200, 15%, 8%)', // Light Mode Text\n    },\n    grey: {\n      50: 'hsl(0, 0%, 98%)', // Light Mode Background\n      500: 'hsl(0, 0%, 52%)', // Light Mode Input\n    },\n  },\n  typography: {\n    fontFamily: \"'Nunito Sans', sans-serif\",\n    fontSize: 14,\n    fontWeightLight: 300,\n    fontWeightMedium: 600,\n    fontWeightBold: 800,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { theme } from '../src/styles/theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Router>\n        <App />\n      </Router>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}